{"version":3,"sources":["../src/cli.ts"],"sourcesContent":["import { Command } from 'commander';\nimport { resolve } from 'path';\nimport degit from 'degit';\n\nconst program = new Command();\n\nprogram\n  .name('dual-serve')\n  .description('Dual Serve is a CLI tool for create serverless project')\n  .version('1.0.0');\n\n// Fixed command definition\nprogram\n  .command('new <project-name>')  // Define required argument\n  .description('Create project')\n  .action(async (projectName) => {  // Get project name from argument\n    const targetDir = resolve(process.cwd(), projectName);\n    const repo = 'Grids-and-Guides/Dual-Serve'; \n\n    console.log(`Creating project in ${targetDir}`);\n    const emitter = degit(repo, { cache: false, force: true });\n\n    try {\n      await emitter.clone(targetDir);\n      console.log('Project created!');\n      console.log(`\\nNext steps:\\n  cd ${projectName}\\n  npm install\\n  npm run dev`);\n    } catch (err) {\n      console.error('Error cloning template:', err);\n      process.exit(1);\n    }\n  });\n\nprogram.parse(process.argv);"],"mappings":";;;AAAA,SAAS,eAAe;AACxB,SAAS,eAAe;AACxB,OAAO,WAAW;AAElB,IAAM,UAAU,IAAI,QAAQ;AAE5B,QACG,KAAK,YAAY,EACjB,YAAY,wDAAwD,EACpE,QAAQ,OAAO;AAGlB,QACG,QAAQ,oBAAoB,EAC5B,YAAY,gBAAgB,EAC5B,OAAO,OAAO,gBAAgB;AAC7B,QAAM,YAAY,QAAQ,QAAQ,IAAI,GAAG,WAAW;AACpD,QAAM,OAAO;AAEb,UAAQ,IAAI,uBAAuB,SAAS,EAAE;AAC9C,QAAM,UAAU,MAAM,MAAM,EAAE,OAAO,OAAO,OAAO,KAAK,CAAC;AAEzD,MAAI;AACF,UAAM,QAAQ,MAAM,SAAS;AAC7B,YAAQ,IAAI,kBAAkB;AAC9B,YAAQ,IAAI;AAAA;AAAA,OAAuB,WAAW;AAAA;AAAA,cAAgC;AAAA,EAChF,SAAS,KAAK;AACZ,YAAQ,MAAM,2BAA2B,GAAG;AAC5C,YAAQ,KAAK,CAAC;AAAA,EAChB;AACF,CAAC;AAEH,QAAQ,MAAM,QAAQ,IAAI;","names":[]}